{"version":3,"sources":["constants/index.js","containers/sidebar.tsx","components/loading.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["constants","themes","dark","base_font_color","loading_background","sidebar_color","light","menuItems","title","url","theme","Constants","Sidebar","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","openSidebar","sidebar","document","querySelector","style","display","inherits","createClass","key","value","SidebarContainer","styled","div","_templateObject","HamburgerMenu","button","_templateObject2","breakpoint","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","MobileSidebar","_templateObject8","window","innerWidth","react_default","a","createElement","onClick","id","React","Component","illo","Loading","animate","rotate","y","updateRenderGraph","requestAnimationFrame","Zdog","Illustration","element","zoom","x","TAU","frontZ","z","backZ","gearPath","path","i","teeth","radius","theta","Math","ceil","push","cos","sin","gear","Anchor","addTo","gearSide","translate","Shape","color","backface","fill","stroke","closed","Cylinder","diameter","copyGraph","forEach","corner","nextCorner","Vector","add","LoadingContainer","loading_templateObject","props","loading","LoadingSvg","svg","loading_templateObject2","LoadingMessage","h1","loading_templateObject3","className","width","height","App","AppContainer","App_templateObject","react_router_dom","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eec589a6.chunk.js","sourcesContent":["const themes = {\n    dark: {\n        base_font_color: '#FFFFFF',\n        loading_background: '#1A237E',\n        sidebar_color: '#303F9F',\n    },\n    light: {\n        base_font_color: '#000000',\n        loading_background: '#FAFAFA',\n        sidebar_color: '#303F9F',\n    }\n}\n\nexport default {\n    themes,\n    menuItems: [\n        {title: 'Dashboard', url: '/dashboard'},\n        {title: 'Top List', url: '/toplists'},\n        {title: 'All Coins', url: '/coinlist'},\n        {title: 'News', url: '/news'},\n    ],\n}","import React from 'react';\nimport styled from 'styled-components';\nimport breakpoint from 'styled-components-breakpoint';\nimport Constants from '../constants';\n\nconst activeTheme = 'dark'\nconst theme = Constants.themes[activeTheme]\n\nexport class Sidebar extends React.Component {\n\n    openSidebar = () => {\n        const sidebar = document.querySelector('#mobile-sidebar') as HTMLElement\n        if (sidebar === null) {\n            return\n        }\n        sidebar.style.display = 'flex';\n    }\n\n    render() {\n        const SidebarContainer = styled.div`\n            height: 100%;\n            display: flex;\n        `;\n\n        const HamburgerMenu = styled.button`\n            z-index: 3;\n            position: absolute;\n    \n            ${breakpoint('mobile')`\n                display: flex;\n            `}\n\n            ${breakpoint('tablet')`\n                display: none;\n            `}\n        `;\n\n        const Sidebar = styled.div`\n            background: ${theme.sidebar_color};\n            height: 100%;\n            position: relative;\n            z-index: 8;\n            width: 270px;\n\n            ${breakpoint('mobile')`\n                display: none;\n            `}\n\n            ${breakpoint('tablet')`\n                display: flex;\n            `}\n        `;\n\n        const MobileSidebar = styled.div`\n            background: ${theme.sidebar_color};\n            height: 100%;\n            width: ${window.innerWidth}px;\n            position: relative;\n            display: none;\n            z-index: 8;\n        `;\n        return (\n            <SidebarContainer>\n                <HamburgerMenu onClick={this.openSidebar}/>\n                <Sidebar id=\"sidebar\" />\n                <MobileSidebar id=\"mobile-sidebar\"/>\n            </SidebarContainer>\n        );\n    }\n}\n\nexport default Sidebar;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Zdog from 'zdog';\nimport Constants from '../constants';\n\ntype Props = {\n    loading: boolean\n}\n\nconst activeTheme = 'dark'\nconst theme = Constants.themes[activeTheme]\nlet illo: any;\n\nexport class Loading extends React.Component<Props> {\n    componentDidMount() {\n        const zoom = 6;\n        illo = new Zdog.Illustration({\n            element: '.zdog-svg',\n            zoom,\n            rotate: { x: -0.4 }\n        });\n\n        const TAU = Zdog.TAU;\n\n        // -- illustration shapes --- //\n\n        const teeth = 8;\n        const frontZ = { z: 3 };\n        const backZ = { z: -3 };\n\n        const colorA = '#EA0';\n        const colorB = '#345';\n\n        const gearPath = ( function() {\n            const path = [];\n            const teethCount = teeth * 4;\n            for (let i=0; i < teethCount; i++) {\n                const isOuter = i % 4 < 2;\n                const radius = isOuter ? 12 : 9.5;\n                let theta = Math.ceil( i/2 ) * 2;\n                theta += i % 2 ? -0.2 : 0.2;\n                theta = ( theta/teethCount + 1/teethCount ) * TAU ;\n                path.push({\n                    x: Math.cos( theta ) * radius,\n                    y: Math.sin( theta ) * radius,\n                });\n            }\n            return path;\n        })();\n\n        const gear = new Zdog.Anchor({\n            addTo: illo,\n            rotate: { x: TAU/4 },\n        });\n\n        const gearSide = new Zdog.Anchor({\n            addTo: gear,\n            translate: frontZ,\n        });\n        // gear face\n        new Zdog.Shape({\n            addTo: gearSide,\n            path: gearPath,\n            color: colorA,\n            backface: false,\n            fill: true,\n            stroke: 1/zoom,\n            closed: false,\n            // visible: false,\n        });\n        // nub\n        new Zdog.Cylinder({\n            addTo: gearSide,\n            diameter: 6,\n            length: 2,\n            color: colorB,\n            backface: 'white',\n            translate: { z: 1 },\n            fill: true,\n            stroke: false,\n        });\n\n        gearSide.copyGraph({\n            rotate: { y: TAU/2 },\n            translate: backZ,\n        });\n\n        gearPath.forEach( function( corner, i ) {\n            const nextCorner = gearPath[ i + 1 ] || gearPath[0];\n            new Zdog.Shape({\n                addTo: gear,\n                path: [\n                new Zdog.Vector( corner ).add( frontZ ),\n                new Zdog.Vector( corner ).add( backZ ),\n                new Zdog.Vector( nextCorner ).add( backZ ),\n                new Zdog.Vector( nextCorner ).add( frontZ ),\n                ],\n                color: i % 2 ? colorA : colorB,\n                fill: true,\n                stroke: 1/zoom,\n            });\n\n        });\n        \n        this.animate();\n    }\n    \n    animate = () => {\n        illo.rotate.y += 0.009;\n        illo.updateRenderGraph();\n        requestAnimationFrame(this.animate);\n    }\n\n    render() {\n        const LoadingContainer = styled.div`\n            height: 100%;\n            width: 100%;\n            position: absolute;\n            z-index: 10;\n            display: ${this.props.loading ? 'flex' : 'none'};\n            justify-content: center;\n            align-items: center;\n            flex-direction: column;\n            background: ${theme.loading_background}\n        `;\n        \n        const LoadingSvg = styled.svg`\n            display: flex;\n        `;\n\n        const LoadingMessage = styled.h1`\n            color: ${theme.base_font_color};\n            letter-spacing: 1.7px;\n        `;\n        return (\n            <LoadingContainer>\n                <LoadingSvg className=\"zdog-svg\" width=\"240\" height=\"240\"></LoadingSvg>\n                <LoadingMessage>Loading</LoadingMessage>\n            </LoadingContainer>\n        )\n    }\n}\n\nexport default Loading;\n ","import React from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport styled from 'styled-components';\n\nimport Sidebar from './containers/sidebar';\nimport Loading from './components/loading';\nimport './App.css';\n\nexport class App extends React.Component {\n    render() {\n        const AppContainer = styled.div`\n            height: 100%;\n            width: 100%;\n            display: flex;\n        `;\n\n        return (\n            <BrowserRouter>\n                <AppContainer className=\"App\">\n                    <Loading loading={false}/>\n                    <Sidebar />\n                </AppContainer>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}